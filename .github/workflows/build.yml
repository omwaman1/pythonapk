name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip build-essential git python3 python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev
        sudo apt-get install -y libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good
        sudo apt-get install -y build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev zlib1g-dev libssl-dev openssl libgdbm-dev libgdbm-compat-dev liblzma-dev libreadline-dev libncursesw5-dev libffi-dev uuid-dev
        sudo apt-get install -y libffi-dev openjdk-17-jdk autoconf

    - name: Setup Android SDK
      run: |
        # Define the SDK root directory expected by Buildozer
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk
        # Download and install Android command-line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools
        # Move contents to a 'latest' directory for sdkmanager compatibility
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools/latest
        mv /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools/cmdline-tools/* /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools/latest/
        # Install required SDK components
        yes | /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=/home/runner/.buildozer/android/platform/android-sdk "tools" "platform-tools" "build-tools;30.0.3" "platforms;android-30"
        # Set environment variables
        echo "ANDROID_HOME=/home/runner/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/home/runner/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "/home/runner/.buildozer/android/platform/android-sdk/tools/bin" >> $GITHUB_PATH
        echo "/home/runner/.buildozer/android/platform/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install --upgrade https://github.com/kivy/python-for-android/archive/master.zip
    
    - name: Download and verify model
      run: |
        python download_model.py
    
    - name: Update buildozer.spec
      run: |
        # Remove the android.sdk line that's causing warnings
        sed -i '/^android.sdk/d' buildozer.spec
        # Update android.archs to use the correct syntax
        sed -i 's/android.arch = arm64-v8a/android.archs = arm64-v8a, armeabi-v7a/g' buildozer.spec
        # Add line to explicitly accept SDK license
        echo "android.accept_sdk_license = True" >> buildozer.spec
        # Explicitly set the SDK path
        echo "android.sdk_path = /home/runner/.buildozer/android/platform/android-sdk" >> buildozer.spec
    
    - name: Build with Buildozer
      run: |
        export BUILDOZER_VERBOSE=1
        buildozer android debug
    
    - name: Upload APK as artifact
      run: |
        mkdir -p ./artifacts
        cp bin/*.apk ./artifacts/ || echo "No APK found, check build logs"
        
    - name: Archive APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: ./artifacts/*.apk
        if-no-files-found: warn
