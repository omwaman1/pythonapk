# file: .github/workflows/build.yml
name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Android SDK tools
      run: |
        mkdir -p $HOME/android-sdk
        cd $HOME/android-sdk
        
        # Download command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        
        # Set up environment
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/bin
        
        # Accept licenses and install required components
        mkdir -p $ANDROID_HOME/licenses
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license
        
        # Create a tools directory and move contents there to match newer SDK structure
        mkdir -p $ANDROID_HOME/cmdline-tools/tools
        mv $ANDROID_HOME/cmdline-tools/bin $ANDROID_HOME/cmdline-tools/tools/
        mv $ANDROID_HOME/cmdline-tools/lib $ANDROID_HOME/cmdline-tools/tools/
        
        # Install SDK components including build-tools which has aidl
        cd $ANDROID_HOME/cmdline-tools/tools/bin
        ./sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "build-tools;33.0.2" "platforms;android-33" "ndk;26.1.10909125"
        
        # Add to PATH for buildozer to find
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        sudo apt-get update
        sudo apt-get install -y python3-pip build-essential git python3 python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev
        sudo apt-get install -y libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good
        sudo apt-get install -y build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev zlib1g-dev libssl-dev openssl libgdbm-dev libgdbm-compat-dev liblzma-dev libreadline-dev libncursesw5-dev libffi-dev uuid-dev
        sudo apt-get install -y libffi-dev openjdk-17-jdk
    
    - name: Download and verify model
      run: |
        python download_model.py
    
    - name: Build with Buildozer
      run: |
        buildozer android debug
    
    - name: Upload APK as artifact
      run: |
        mkdir -p ./artifacts
        cp bin/*.apk ./artifacts/ || echo "No APK found, check build logs"
        
    - name: Archive APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: ./artifacts/*.apk
        if-no-files-found: warn
